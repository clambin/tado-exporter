name: Build

on:
  push:
    branches:
    - master
    - goify

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: test
        run: |
          go test ./... -coverprofile=coverage.txt -covermode=atomic
          # go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ tado-monitor ]
        platform: [ linux ]
        arch: [ amd64, arm ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Version number
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF##*/}
      - name: build
        env:
          TARGET: ${{ matrix.target }}
          GOOS: ${{ matrix.platform }}
          GOARCH: ${{ matrix.arch }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          CGO_ENABLED=0 go build \
            -ldflags "-X github.com/$GITHUB_REPOSITORY/internal/version.BuildVersion=$RELEASE_VERSION" \
            -o bld/$TARGET-$GOOS-$GOARCH \
            $TARGET.go
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-${{ matrix.platform }}-${{ matrix.arch }}
          path: ./bld/*
  docker:
    needs:  build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: tado-monitor-linux-arm
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: tado-monitor-linux-amd64
          path: ./bld
      - name: Fix permissions
        run: chmod +x bld/*
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: metadata
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: clambin/tado-monitor
          tag-sha: True
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
